N1 = 179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581

def isqrt(x):
    n = int(x)
    # Use newton's method and get a good starting guess
    a, b = divmod(n.bit_length(), 2)
    x = 2**(a+b)
    while True:
        y = (x + n//x)//2
        if y >= x:
            return x
        x = y

A1 = isqrt(N1) + 1
x1 = isqrt(A1**2 - N1)
print 'ANSWER 1:\n', A1 - x1, '\n\n'

#################################################################
N2 = 648455842808071669662824265346772278726343720706976263060439070378797308618081116462714015276061417569195587321840254520655424906719892428844841839353281972988531310511738648965962582821502504990264452100885281673303711142296421027840289307657458645233683357077834689715838646088239640236866252211790085787877

# Scan for A near sqrt(N)
A = isqrt(N2)
while True:
    A += 1
    A2 = A**2
    x = isqrt(A2 - N2)
    if A2 - x**2 == N2:
        break

print 'ANSWER 2:\n', (A-x), '\n\n'

################################################################
# Use the hint except multiply by two to clear fractions
N3 = 720062263747350425279564435525583738338084451473999841826653057981916355690188337790423408664187663938485175264994017897083524079135686877441155132015188279331812309091996246361896836573643119174094961348524639707885238799396839230364676670221627018353299443241192173812729276147530748597302192751375739387929

N24 = N3 * 24
A = isqrt(N24) + 1
x = isqrt(A**2 - N24)
print 'ANSWER 3:\n', A-x, '\n\n'

################################################################
def euclid(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q,r = b//a,b%a; m,n = x-u*q,y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
    return b, x, y

# RUN RSA
c = 22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540
e = 65537
p = A1 - x1
q = A1 + x1
N = p * q
phi = (p - 1)*(q - 1)
g,x,y = euclid(e, phi)
d = x % phi
m = pow(c, d, N)

res = str(hex(m))
# Remove initial padding and the L from python
ind = res.index('00')
res = res[ind+2:-1]
strings = ''.join([chr(int(res[a:a+2],16)) for a in range(0, len(res), 2)])
print 'ANSWER 4:\n', strings